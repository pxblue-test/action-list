// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActionListItem Tests  ActionListItem -1 Renders 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": "transparent",
            "fontSize": 17,
          }
        }
        testID="listItemTitle"
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        Action 1
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#727e84",
            "fontSize": 15,
          }
        }
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        Action 1 details
      </Text>
    </View>
    <View
      width={16}
    />
    <View>
      <View
        collapsable={false}
      >
        <View>
          <View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                }
              }
            >
              <Text />
            </View>
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onDismiss={[Function]}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            accessible={false}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 4,
                  "left": 8,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "black",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.14,
                  "shadowRadius": 2,
                  "top": 8,
                  "transform": Array [],
                }
              }
            >
              <View
                style={
                  Object {
                    "overflow": "hidden",
                  }
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 48,
                          "justifyContent": "center",
                          "maxWidth": 248,
                          "minWidth": 124,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="clip"
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                            "fontWeight": "400",
                            "paddingHorizontal": 16,
                            "textAlign": "left",
                          },
                          false,
                          undefined,
                        ]
                      }
                    >
                      Remove
                    </Text>
                  </View>
                </View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 48,
                          "justifyContent": "center",
                          "maxWidth": 248,
                          "minWidth": 124,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="clip"
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                            "fontWeight": "400",
                            "paddingHorizontal": 16,
                            "textAlign": "left",
                          },
                          false,
                          undefined,
                        ]
                      }
                    >
                      View Details
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
</View>
`;

exports[`ActionListItem Tests  ActionListItem-2 Renders 1`] = `
<View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "borderColor": "#bcbbc1",
        "flexDirection": "row",
        "padding": 14,
      }
    }
  >
    <View
      style={
        Object {
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "backgroundColor": "transparent",
            "fontSize": 17,
          }
        }
        testID="listItemTitle"
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        Item 34
      </Text>
      <Text
        style={
          Object {
            "backgroundColor": "transparent",
            "color": "#727e84",
            "fontSize": 15,
          }
        }
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        Details for item 34
      </Text>
    </View>
    <View
      width={16}
    />
    <View>
      <View
        collapsable={false}
      >
        <View>
          <View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                }
              }
            >
              <Text />
            </View>
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onDismiss={[Function]}
          onRequestClose={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "portrait-upside-down",
              "landscape",
              "landscape-left",
              "landscape-right",
            ]
          }
          transparent={true}
          visible={false}
        >
          <View
            accessible={false}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              }
            }
          >
            <View
              onLayout={[Function]}
              style={
                Object {
                  "backgroundColor": "white",
                  "borderRadius": 4,
                  "left": 8,
                  "opacity": 0,
                  "position": "absolute",
                  "shadowColor": "black",
                  "shadowOffset": Object {
                    "height": 2,
                    "width": 0,
                  },
                  "shadowOpacity": 0.14,
                  "shadowRadius": 2,
                  "top": 8,
                  "transform": Array [],
                }
              }
            >
              <View
                style={
                  Object {
                    "overflow": "hidden",
                  }
                }
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 48,
                          "justifyContent": "center",
                          "maxWidth": 248,
                          "minWidth": 124,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="clip"
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                            "fontWeight": "400",
                            "paddingHorizontal": 16,
                            "textAlign": "left",
                          },
                          false,
                          undefined,
                        ]
                      }
                    >
                      Remove
                    </Text>
                  </View>
                </View>
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={null}
                >
                  <View
                    style={
                      Array [
                        Object {
                          "height": 48,
                          "justifyContent": "center",
                          "maxWidth": 248,
                          "minWidth": 124,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      ellipsizeMode="clip"
                      numberOfLines={1}
                      style={
                        Array [
                          Object {
                            "fontSize": 14,
                            "fontWeight": "400",
                            "paddingHorizontal": 16,
                            "textAlign": "left",
                          },
                          false,
                          undefined,
                        ]
                      }
                    >
                      View Details
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
</View>
`;
